{"ast":null,"code":"var _jsxFileName = \"/Users/santiago/Documents/tulipan1637/iot-sensor/app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Table } from './features/table/Table';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [sensors, setSensores] = useState(null);\n\n  const fetchData = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/listings');\n      const data = await response.json();\n      setSensores(data);\n    } catch (e) {\n      console.log(e.stack);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  });\n  const data = React.useMemo(() => [{\n    col1: 'Hello',\n    col2: 'World'\n  }, {\n    col1: 'react-table',\n    col2: 'rocks'\n  }, {\n    col1: 'whatever',\n    col2: 'you want'\n  }], []);\n  const columns = React.useMemo(() => [{\n    Header: 'Column 1',\n    accessor: 'col1'\n  }, {\n    Header: 'Column 2',\n    accessor: 'col2'\n  }], []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(Table, {\n        columns: columns,\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        data: sensors\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"FFDihqrSxZ0q+EmysM0zsyCw1Og=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/santiago/Documents/tulipan1637/iot-sensor/app/src/App.js"],"names":["React","useEffect","useState","Table","App","sensors","setSensores","fetchData","response","fetch","data","json","e","console","log","stack","useMemo","col1","col2","columns","Header","accessor"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAAQC,KAAR,QAAoB,wBAApB;AACA,OAAO,WAAP;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,OAAD,EAAUC,WAAV,IAAyBJ,QAAQ,CAAC,IAAD,CAAvC;;AAEA,QAAMK,SAAS,GAAG,YAAU;AAC1B,QAAG;AACD,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAD,CAA5B;AACA,YAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAL,MAAAA,WAAW,CAACI,IAAD,CAAX;AACD,KAJD,CAIC,OAAME,CAAN,EAAQ;AACPC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,KAAd;AACD;AACF,GARD;;AAUAd,EAAAA,SAAS,CAAE,MAAK;AAACM,IAAAA,SAAS;AAAG,GAApB,CAAT;AAEA,QAAMG,IAAI,GAAGV,KAAK,CAACgB,OAAN,CACX,MAAM,CACJ;AACEC,IAAAA,IAAI,EAAE,OADR;AAEEC,IAAAA,IAAI,EAAE;AAFR,GADI,EAKJ;AACED,IAAAA,IAAI,EAAE,aADR;AAEEC,IAAAA,IAAI,EAAE;AAFR,GALI,EASJ;AACED,IAAAA,IAAI,EAAE,UADR;AAEEC,IAAAA,IAAI,EAAE;AAFR,GATI,CADK,EAeX,EAfW,CAAb;AAkBA,QAAMC,OAAO,GAAGnB,KAAK,CAACgB,OAAN,CACd,MAAM,CACJ;AACEI,IAAAA,MAAM,EAAE,UADV;AAEEC,IAAAA,QAAQ,EAAE;AAFZ,GADI,EAKJ;AACED,IAAAA,MAAM,EAAE,UADV;AAEEC,IAAAA,QAAQ,EAAE;AAFZ,GALI,CADQ,EAWd,EAXc,CAAhB;AAcA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,8BAGE,QAAC,KAAD;AAAO,QAAA,OAAO,EAAEF,OAAhB;AAAyB,QAAA,IAAI,EAAET;AAA/B;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAK,QAAA,IAAI,EAAIL;AAAb;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GA1DQD,G;;KAAAA,G;AA4DT,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {Table} from './features/table/Table';\nimport './App.css';\n\nfunction App() {\n  const [sensors, setSensores] = useState(null);\n\n  const fetchData = async ()=>{\n    try{\n      const response = await fetch('http://localhost:5000/listings');\n      const data = await response.json();\n      setSensores(data);\n    }catch(e){\n      console.log(e.stack);\n    }\n  }\n\n  useEffect( ()=> {fetchData()});\n\n  const data = React.useMemo(\n    () => [\n      {\n        col1: 'Hello',\n        col2: 'World',\n      },\n      {\n        col1: 'react-table',\n        col2: 'rocks',\n      },\n      {\n        col1: 'whatever',\n        col2: 'you want',\n      },\n    ],\n    []\n  )\n\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: 'Column 1',\n        accessor: 'col1',\n      },\n      {\n        Header: 'Column 2',\n        accessor: 'col2',\n      }\n    ],\n    []\n  )\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        {/* <img src={logo} className=\"App-logo\" alt=\"logo\" /> */}\n        {/* <Counter /> */}\n        <Table columns={columns} data={data}/>\n        <div data = {sensors}></div>\n        \n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}