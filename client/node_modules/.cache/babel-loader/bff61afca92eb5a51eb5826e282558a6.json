{"ast":null,"code":"var _jsxFileName = \"/Users/santiago/Documents/tulipan1637/iot-sensor/app/src/features/table/TableV2.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useTable, useBlockLayout } from 'react-table';\nimport scrollbarWidth from './scrollbarWidth';\nimport { FixedSizeList } from 'react-window';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function TableV2(_ref) {\n  _s();\n\n  let {\n    columns,\n    data\n  } = _ref;\n  const defaultColumn = React.useMemo(() => ({\n    width: 150\n  }), []);\n  const scrollBarSize = React.useMemo(() => scrollbarWidth(), []);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    totalColumnsWidth,\n    prepareRow\n  } = useTable({\n    columns,\n    data,\n    defaultColumn\n  }, useBlockLayout);\n  const RenderRow = React.useCallback(_ref2 => {\n    let {\n      index,\n      style\n    } = _ref2;\n    const row = rows[index];\n    prepareRow(row);\n    return /*#__PURE__*/_jsxDEV(\"div\", { ...row.getRowProps({\n        style\n      }),\n      className: \"tr\",\n      children: row.cells.map(cell => {\n        return /*#__PURE__*/_jsxDEV(\"div\", { ...cell.getCellProps(),\n          className: \"td\",\n          children: cell.render('Cell')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 19\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this);\n  }, [prepareRow, rows]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", { ...getTableProps(),\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"div\", { ...headerGroup.getHeaderGroupProps(),\n          className: \"tr\",\n          children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"div\", { ...column.getHeaderProps(),\n            className: \"th\",\n            children: column.render('Header')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", { ...getTableBodyProps(),\n        children: /*#__PURE__*/_jsxDEV(FixedSizeList, {\n          height: 400,\n          itemCount: rows.length,\n          itemSize: 45,\n          width: totalColumnsWidth + scrollBarSize,\n          children: RenderRow\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TableV2, \"YBjzAeFoGJrLx4TVQnd/lwyJxuM=\", false, function () {\n  return [useTable];\n});\n\n_c = TableV2;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableV2\");","map":{"version":3,"sources":["/Users/santiago/Documents/tulipan1637/iot-sensor/app/src/features/table/TableV2.js"],"names":["React","useTable","useBlockLayout","scrollbarWidth","FixedSizeList","TableV2","columns","data","defaultColumn","useMemo","width","scrollBarSize","getTableProps","getTableBodyProps","headerGroups","rows","totalColumnsWidth","prepareRow","RenderRow","useCallback","index","style","row","getRowProps","cells","map","cell","getCellProps","render","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","length"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAAQC,QAAR,EAAkBC,cAAlB,QAAuC,aAAvC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,aAAT,QAA8B,cAA9B;;AAEA,OAAO,SAASC,OAAT,OAAmC;AAAA;;AAAA,MAAlB;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAkB;AAIxC,QAAMC,aAAa,GAAGR,KAAK,CAACS,OAAN,CACpB,OAAO;AACLC,IAAAA,KAAK,EAAE;AADF,GAAP,CADoB,EAIpB,EAJoB,CAAtB;AAOA,QAAMC,aAAa,GAAGX,KAAK,CAACS,OAAN,CAAc,MAAMN,cAAc,EAAlC,EAAsC,EAAtC,CAAtB;AAEA,QAAM;AACJS,IAAAA,aADI;AAEJC,IAAAA,iBAFI;AAGJC,IAAAA,YAHI;AAIJC,IAAAA,IAJI;AAKJC,IAAAA,iBALI;AAMJC,IAAAA;AANI,MAOFhB,QAAQ,CAAC;AAAEK,IAAAA,OAAF;AAAWC,IAAAA,IAAX;AAAiBC,IAAAA;AAAjB,GAAD,EAAkCN,cAAlC,CAPZ;AASI,QAAMgB,SAAS,GAAGlB,KAAK,CAACmB,WAAN,CAChB,SAAsB;AAAA,QAArB;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAqB;AACpB,UAAMC,GAAG,GAAGP,IAAI,CAACK,KAAD,CAAhB;AACAH,IAAAA,UAAU,CAACK,GAAD,CAAV;AACA,wBACE,oBACMA,GAAG,CAACC,WAAJ,CAAgB;AAClBF,QAAAA;AADkB,OAAhB,CADN;AAIE,MAAA,SAAS,EAAC,IAJZ;AAAA,gBAMGC,GAAG,CAACE,KAAJ,CAAUC,GAAV,CAAcC,IAAI,IAAI;AACrB,4BACE,oBAASA,IAAI,CAACC,YAAL,EAAT;AAA8B,UAAA,SAAS,EAAC,IAAxC;AAAA,oBACGD,IAAI,CAACE,MAAL,CAAY,MAAZ;AADH;AAAA;AAAA;AAAA;AAAA,gBADF;AAKD,OANA;AANH;AAAA;AAAA;AAAA;AAAA,YADF;AAgBD,GApBe,EAqBhB,CAACX,UAAD,EAAaF,IAAb,CArBgB,CAAlB;AA0BA,sBACE;AAAA,2BACA,oBAASH,aAAa,EAAtB;AAA0B,MAAA,SAAS,EAAC,OAApC;AAAA,8BACE;AAAA,kBACGE,YAAY,CAACW,GAAb,CAAiBI,WAAW,iBAC3B,oBAASA,WAAW,CAACC,mBAAZ,EAAT;AAA4C,UAAA,SAAS,EAAC,IAAtD;AAAA,oBACGD,WAAW,CAACE,OAAZ,CAAoBN,GAApB,CAAwBO,MAAM,iBAC7B,oBAASA,MAAM,CAACC,cAAP,EAAT;AAAkC,YAAA,SAAS,EAAC,IAA5C;AAAA,sBACGD,MAAM,CAACJ,MAAP,CAAc,QAAd;AADH;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cADF,eAaE,oBAASf,iBAAiB,EAA1B;AAAA,+BACE,QAAC,aAAD;AACE,UAAA,MAAM,EAAE,GADV;AAEE,UAAA,SAAS,EAAEE,IAAI,CAACmB,MAFlB;AAGE,UAAA,QAAQ,EAAE,EAHZ;AAIE,UAAA,KAAK,EAAElB,iBAAiB,GAACL,aAJ3B;AAAA,oBAMGO;AANH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADF;AA4BL;;GA5Eeb,O;UAoBVJ,Q;;;KApBUI,O","sourcesContent":["import React from 'react';\n\nimport {useTable, useBlockLayout} from 'react-table';\nimport scrollbarWidth from './scrollbarWidth'\nimport { FixedSizeList } from 'react-window'\n\nexport function TableV2({ columns, data }){\n\n\n\n  const defaultColumn = React.useMemo(\n    () => ({\n      width: 150,\n    }),\n    []\n  )\n\n  const scrollBarSize = React.useMemo(() => scrollbarWidth(), [])\n    \n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    totalColumnsWidth,\n    prepareRow,\n  } = useTable({ columns, data, defaultColumn },useBlockLayout);\n\n      const RenderRow = React.useCallback(\n        ({ index, style }) => {\n          const row = rows[index]\n          prepareRow(row)\n          return (\n            <div\n              {...row.getRowProps({\n                style,\n              })}\n              className=\"tr\"\n            >\n              {row.cells.map(cell => {\n                return (\n                  <div {...cell.getCellProps()} className=\"td\">\n                    {cell.render('Cell')}\n                  </div>\n                )\n              })}\n            </div>\n          )\n        },\n        [prepareRow, rows]\n      )\n\n\n    \n      return (\n        <div>\n        <div {...getTableProps()} className=\"table\">\n          <div>\n            {headerGroups.map(headerGroup => (\n              <div {...headerGroup.getHeaderGroupProps()} className=\"tr\">\n                {headerGroup.headers.map(column => (\n                  <div {...column.getHeaderProps()} className=\"th\">\n                    {column.render('Header')}\n                  </div>\n                ))}\n              </div>\n            ))}\n          </div>\n    \n          <div {...getTableBodyProps()}>\n            <FixedSizeList\n              height={400}\n              itemCount={rows.length}\n              itemSize={45}\n              width={totalColumnsWidth+scrollBarSize}\n            >\n              {RenderRow}\n            </FixedSizeList>\n          </div>\n        </div>\n        </div>\n      )\n}\n"]},"metadata":{},"sourceType":"module"}