{"map":"{\"version\":3,\"sources\":[\"/Users/santiago/Documents/tulipan1637/iot-sensor/app/src/features/table/scrollbarWidth.js\",\"/Users/santiago/Documents/tulipan1637/iot-sensor/app/src/features/table/tableSlice.js\",\"/Users/santiago/Documents/tulipan1637/iot-sensor/app/src/features/table/Table.js\",\"/Users/santiago/Documents/tulipan1637/iot-sensor/app/src/App.js\",\"/Users/santiago/Documents/tulipan1637/iot-sensor/app/src/app/store.js\",\"/Users/santiago/Documents/tulipan1637/iot-sensor/app/src/serviceWorker.js\",\"/Users/santiago/Documents/tulipan1637/iot-sensor/app/src/index.js\"],\"names\":[\"scrollbarWidth\",\"scrollDiv\",\"document\",\"createElement\",\"setAttribute\",\"body\",\"appendChild\",\"offsetWidth\",\"clientWidth\",\"removeChild\",\"tableSlice\",\"createSlice\",\"name\",\"initialState\",\"value\",\"reducers\",\"setSensorData\",\"state\",\"action\",\"payload\",\"actions\",\"selectTable\",\"table\",\"TWO_HUNDRED_MS\",\"GlobalFilter\",\"_ref\",\"preGlobalFilteredRows\",\"globalFilter\",\"setGlobalFilter\",\"_useState\",\"useState\",\"_useState2\",\"Object\",\"slicedToArray\",\"setValue\",\"onChange\",\"useAsyncDebounce\",\"undefined\",\"react_default\",\"a\",\"e\",\"target\",\"placeholder\",\"Table\",\"_ref2\",\"columns\",\"data\",\"defaultColumn\",\"React\",\"useMemo\",\"width\",\"scrollBarSize\",\"_useTable\",\"useTable\",\"useBlockLayout\",\"useGlobalFilter\",\"useSortBy\",\"getTableProps\",\"getTableBodyProps\",\"headerGroups\",\"rows\",\"totalColumnsWidth\",\"prepareRow\",\"visibleColumns\",\"RenderRow\",\"useCallback\",\"_ref3\",\"index\",\"style\",\"row\",\"assign\",\"getRowProps\",\"className\",\"cells\",\"map\",\"cell\",\"getCellProps\",\"render\",\"sorting\",\"colSpan\",\"length\",\"headerGroup\",\"getHeaderGroupProps\",\"headers\",\"column\",\"getHeaderProps\",\"getSortByToggleProps\",\"index_esm\",\"height\",\"itemCount\",\"itemSize\",\"App\",\"storeData\",\"useSelector\",\"dispatch\",\"useDispatch\",\"fetchData\",\"asyncToGenerator\",\"regenerator_default\",\"mark\",\"_callee\",\"response\",\"SensorData\",\"wrap\",\"_context\",\"prev\",\"next\",\"axios\",\"get\",\"sent\",\"t0\",\"console\",\"log\",\"stack\",\"stop\",\"apply\",\"this\",\"arguments\",\"useEffect\",\"Header\",\"accessor\",\"store\",\"configureStore\",\"reducer\",\"tableReducer\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"container\",\"getElementById\",\"createRoot\",\"StrictMode\",\"es\",\"src_App\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\"],\"mappings\":\"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\",\"sourcesContent\":[\"const scrollbarWidth = () => {\\n    // thanks too https://davidwalsh.name/detect-scrollbar-width\\n    const scrollDiv = document.createElement('div')\\n    scrollDiv.setAttribute('style', 'width: 100px; height: 100px; overflow: scroll; position:absolute; top:-9999px;')\\n    document.body.appendChild(scrollDiv)\\n    const scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth\\n    document.body.removeChild(scrollDiv)\\n    return scrollbarWidth\\n}\\n  \\nexport default scrollbarWidth\",\"import { createSlice } from '@reduxjs/toolkit';\\n\\nconst initialState = {\\n  value: [],\\n};\\n\\nexport const tableSlice = createSlice({\\n  name: 'table',\\n  initialState,\\n  reducers: {\\n    setSensorData: (state, action) => {\\n      state.value = action.payload;\\n    }\\n  }\\n});\\n\\nexport const { setSensorData } = tableSlice.actions;\\n\\nexport const selectTable = (state) => state.table.value;\\n\\nexport default tableSlice.reducer;\\n\",\"import React,{useState, useEffect} from 'react';\\n// import {Table} from 'react-bootstrap';\\nimport {useTable, useBlockLayout, useGlobalFilter, useSortBy, useAsyncDebounce} from 'react-table';\\nimport scrollbarWidth from './scrollbarWidth';\\nimport { FixedSizeList } from 'react-window';\\nimport axios from 'axios';\\n\\nimport {useSelector, useDispatch} from 'react-redux';\\nimport {setSensorData, selectTable} from './tableSlice';\\n\\n\\nconst TWO_HUNDRED_MS = 100;\\n\\n/*\\n * Helper function as global filter\\n*/\\n\\nfunction GlobalFilter({preGlobalFilteredRows, globalFilter,setGlobalFilter}){\\n  const [value, setValue] = useState(globalFilter);\\n  const onChange = useAsyncDebounce(value => {\\n    setGlobalFilter(value || undefined)\\n  }, TWO_HUNDRED_MS);\\n  return (\\n    <input  value={value || \\\"\\\"}\\n            onChange={e => {\\n                setValue(e.target.value);\\n                onChange(e.target.value);\\n              }}\\n    placeholder={`Search`}\\n  />);\\n}\\n\\n/*\\n * Table component function as global filter\\n*/\\nexport function Table({ columns, data }){\\n  \\n  const defaultColumn = React.useMemo(\\n    () => ({\\n      width: 160,\\n    }),\\n    []\\n  )\\n\\n  const scrollBarSize = React.useMemo(() => scrollbarWidth(), [])\\n    \\n  const {\\n    getTableProps,\\n    getTableBodyProps,\\n    headerGroups,\\n    rows,\\n    totalColumnsWidth,\\n    prepareRow,\\n    state: { globalFilter },\\n    visibleColumns,\\n    preGlobalFilteredRows,\\n    setGlobalFilter\\n  } = useTable({ columns, data, defaultColumn },useBlockLayout, useGlobalFilter, useSortBy);\\n\\n\\n  const RenderRow = React.useCallback(\\n    ({ index, style }) => {\\n      const row = rows[index]\\n      prepareRow(row)\\n      return (\\n        <tr\\n          {...row.getRowProps({\\n            style,\\n          })}\\n          className=\\\"tr\\\"\\n        >\\n          {row.cells.map(cell => {\\n            return (\\n              <td {...cell.getCellProps()} className=\\\"td\\\">\\n                {cell.render('Cell')}\\n              </td>\\n            )\\n          })}\\n        </tr>\\n      )\\n    },\\n    [prepareRow, rows]\\n  )\\n\\n      return (\\n        <div>\\n        <table {...getTableProps()} sorting>\\n          <thead>\\n          <tr>\\n          <th colSpan={visibleColumns.length}>\\n            <GlobalFilter\\n            preGlobalFilteredRows={preGlobalFilteredRows}\\n            globalFilter={globalFilter}\\n            setGlobalFilter={setGlobalFilter}\\n            />\\n          </th>\\n        </tr>\\n            {headerGroups.map(headerGroup => (\\n              <tr {...headerGroup.getHeaderGroupProps()} >\\n                {headerGroup.headers.map(column => (\\n                  <th {...column.getHeaderProps(column.getSortByToggleProps())} >\\n                    {column.render('Header')}\\n                  </th>\\n                ))}\\n              </tr>\\n            ))}\\n          </thead>\\n    \\n          <tbody {...getTableBodyProps()}>\\n            <FixedSizeList\\n              height={500}\\n              itemCount={rows.length}\\n              itemSize={45}\\n              width={totalColumnsWidth+scrollBarSize}\\n            >\\n              {RenderRow}\\n            </FixedSizeList>\\n          </tbody>\\n        </table>\\n        </div>\\n      )\\n}\\n\",\"import React, { useEffect } from 'react';\\nimport {Table} from './features/table/Table';\\nimport axios from 'axios';\\nimport './App.css';\\n// import 'bootstrap/dist/css/bootstrap.min.css';\\n\\nimport {setSensorData, selectTable} from './features/table/tableSlice';\\nimport {useSelector, useDispatch} from 'react-redux';\\n\\n\\nfunction App() {\\n\\n  const storeData = useSelector(selectTable);\\n  const dispatch = useDispatch();\\n\\n  const fetchData = async ()=>{\\n    try{\\n      const response = await axios.get('http://localhost:5000/listings');\\n      const SensorData = await response.data;\\n      dispatch(setSensorData(SensorData));\\n    }catch(e){\\n      console.log(e.stack);\\n    }\\n  }\\n\\n  useEffect( ()=> {fetchData()},[]);\\n\\n  const columns = React.useMemo(\\n    () => [\\n      {\\n        Header: 'Name',\\n        accessor: 'name',\\n      },\\n      {\\n        Header: 'Long',\\n        accessor: 'long',\\n      },\\n      {\\n        Header: 'Lat',\\n        accessor: 'lat',\\n      },\\n      {\\n        Header: 'Temperature',\\n        accessor: 'temperature',\\n      },\\n      {\\n        Header: 'Humidity',\\n        accessor: 'humidity',\\n      },\\n      {\\n        Header: 'pH',\\n        accessor: 'pH',\\n      },\\n      {\\n        Header: 'Pressure',\\n        accessor: 'pressure',\\n      },\\n      {\\n        Header: 'CO2',\\n        accessor: 'co2',\\n      }\\n    ],\\n    []\\n  )\\n\\n  return (\\n    <div className=\\\"App\\\">\\n      <header className=\\\"App-header\\\">\\n        <Table columns={columns} data={storeData}/>\\n      </header>\\n    </div>\\n  );\\n}\\n\\nexport default App;\\n\",\"import { configureStore } from '@reduxjs/toolkit';\\nimport tableReducer from '../features/table/tableSlice'\\n\\nexport const store = configureStore({\\n  reducer: {\\n    table:tableReducer,\\n  },\\n});\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read https://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.0/8 are considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then((registration) => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch((error) => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl, {\\n    headers: { 'Service-Worker': 'script' },\\n  })\\n    .then((response) => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then((registration) => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then((registration) => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport { createRoot } from 'react-dom/client';\\n\\nimport './index.css';\\nimport App from './App';\\nimport { store } from './app/store';\\nimport { Provider } from 'react-redux';\\nimport * as serviceWorker from './serviceWorker';\\n\\nconst container = document.getElementById('root');\\nconst root = createRoot(container);\\n\\nroot.render(\\n  <React.StrictMode>\\n    <Provider store={store}>\\n      <App />\\n    </Provider>\\n  </React.StrictMode>\\n);\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: https://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{29:function(e,t,a){e.exports=a(63)},36:function(e,t,a){},61:function(e,t,a){},63:function(e,t,a){\"use strict\";a.r(t);var r=a(0),n=a.n(r),o=a(24),l=(a(36),a(7)),c=a.n(l),s=a(25),u=a(28),i=a(5),d=function(){var e=document.createElement(\"div\");e.setAttribute(\"style\",\"width: 100px; height: 100px; overflow: scroll; position:absolute; top:-9999px;\"),document.body.appendChild(e);var t=e.offsetWidth-e.clientWidth;return document.body.removeChild(e),t},m=a(27),p=a(11),b=a.n(p),h=a(4),f=a(8),g=Object(f.b)({name:\"table\",initialState:{value:[]},reducers:{setSensorData:function(e,t){e.value=t.payload}}}),v=g.actions.setSensorData,w=function(e){return e.table.value},E=g.reducer,y=100;function O(e){e.preGlobalFilteredRows;var t=e.globalFilter,a=e.setGlobalFilter,o=Object(r.useState)(t),l=Object(u.a)(o,2),c=l[0],s=l[1],d=Object(i.useAsyncDebounce)(function(e){a(e||void 0)},y);return n.a.createElement(\"input\",{value:c||\"\",onChange:function(e){s(e.target.value),d(e.target.value)},placeholder:\"Search\"})}function j(e){var t=e.columns,a=e.data,r=n.a.useMemo(function(){return{width:160}},[]),o=n.a.useMemo(function(){return d()},[]),l=Object(i.useTable)({columns:t,data:a,defaultColumn:r},i.useBlockLayout,i.useGlobalFilter,i.useSortBy),c=l.getTableProps,s=l.getTableBodyProps,u=l.headerGroups,p=l.rows,b=l.totalColumnsWidth,h=l.prepareRow,f=l.state.globalFilter,g=l.visibleColumns,v=l.preGlobalFilteredRows,w=l.setGlobalFilter,E=n.a.useCallback(function(e){var t=e.index,a=e.style,r=p[t];return h(r),n.a.createElement(\"tr\",Object.assign({},r.getRowProps({style:a}),{className:\"tr\"}),r.cells.map(function(e){return n.a.createElement(\"td\",Object.assign({},e.getCellProps(),{className:\"td\"}),e.render(\"Cell\"))}))},[h,p]);return n.a.createElement(\"div\",null,n.a.createElement(\"table\",Object.assign({},c(),{sorting:!0}),n.a.createElement(\"thead\",null,n.a.createElement(\"tr\",null,n.a.createElement(\"th\",{colSpan:g.length},n.a.createElement(O,{preGlobalFilteredRows:v,globalFilter:f,setGlobalFilter:w}))),u.map(function(e){return n.a.createElement(\"tr\",e.getHeaderGroupProps(),e.headers.map(function(e){return n.a.createElement(\"th\",e.getHeaderProps(e.getSortByToggleProps()),e.render(\"Header\"))}))})),n.a.createElement(\"tbody\",s(),n.a.createElement(m.a,{height:500,itemCount:p.length,itemSize:45,width:b+o},E))))}a(61);var H=function(){var e=Object(h.c)(w),t=Object(h.b)(),a=function(){var e=Object(s.a)(c.a.mark(function e(){var a,r;return c.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,b.a.get(\"http://localhost:5000/listings\");case 3:return a=e.sent,e.next=6,a.data;case 6:r=e.sent,t(v(r)),e.next=13;break;case 10:e.prev=10,e.t0=e.catch(0),console.log(e.t0.stack);case 13:case\"end\":return e.stop()}},e,null,[[0,10]])}));return function(){return e.apply(this,arguments)}}();Object(r.useEffect)(function(){a()},[]);var o=n.a.useMemo(function(){return[{Header:\"Name\",accessor:\"name\"},{Header:\"Long\",accessor:\"long\"},{Header:\"Lat\",accessor:\"lat\"},{Header:\"Temperature\",accessor:\"temperature\"},{Header:\"Humidity\",accessor:\"humidity\"},{Header:\"pH\",accessor:\"pH\"},{Header:\"Pressure\",accessor:\"pressure\"},{Header:\"CO2\",accessor:\"co2\"}]},[]);return n.a.createElement(\"div\",{className:\"App\"},n.a.createElement(\"header\",{className:\"App-header\"},n.a.createElement(j,{columns:o,data:e})))},C=Object(f.a)({reducer:{table:E}});Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));var F=document.getElementById(\"root\");Object(o.createRoot)(F).render(n.a.createElement(n.a.StrictMode,null,n.a.createElement(h.a,{store:C},n.a.createElement(H,null)))),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[29,2,1]]]);","extractedComments":[]}