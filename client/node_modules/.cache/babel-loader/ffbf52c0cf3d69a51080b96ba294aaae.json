{"ast":null,"code":"var _jsxFileName = \"/Users/santiago/Documents/tulipan1637/iot-sensor/app/src/features/table/Table.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useTable } from 'react-table';\nimport scrollbarWidth from './scrollbarWidth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Table(_ref) {\n  _s();\n\n  let {\n    columns,\n    data\n  } = _ref;\n  const defaultColumn = React.useMemo(() => ({\n    width: 150\n  }), []);\n  const scrollBarSize = React.useMemo(() => scrollbarWidth(), []);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data\n  });\n  return /*#__PURE__*/_jsxDEV(\"table\", { ...getTableProps(),\n    style: {\n      border: 'solid 1px blue'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n        children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", { ...column.getHeaderProps(),\n          style: {\n            borderBottom: 'solid 3px red',\n            background: 'aliceblue',\n            color: 'black',\n            fontWeight: 'bold'\n          },\n          children: column.render('Header')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 19\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n      children: rows.map(row => {\n        prepareRow(row);\n        return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n          children: row.cells.map(cell => {\n            return /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps(),\n              style: {\n                padding: '10px',\n                border: 'solid 1px gray',\n                background: 'papayawhip'\n              },\n              children: cell.render('Cell')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 23\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Table, \"8E2VuIS3Si2uksw8LdNfDUpy+KE=\", false, function () {\n  return [useTable];\n});\n\n_c = Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"sources":["/Users/santiago/Documents/tulipan1637/iot-sensor/app/src/features/table/Table.js"],"names":["React","useTable","scrollbarWidth","Table","columns","data","defaultColumn","useMemo","width","scrollBarSize","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","border","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","borderBottom","background","color","fontWeight","render","row","getRowProps","cells","cell","getCellProps","padding"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,aAAvB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AAEA,OAAO,SAASC,KAAT,OAAiC;AAAA;;AAAA,MAAlB;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAkB;AAEtC,QAAMC,aAAa,GAAGN,KAAK,CAACO,OAAN,CACpB,OAAO;AACLC,IAAAA,KAAK,EAAE;AADF,GAAP,CADoB,EAIpB,EAJoB,CAAtB;AAOA,QAAMC,aAAa,GAAGT,KAAK,CAACO,OAAN,CAAc,MAAML,cAAc,EAAlC,EAAsC,EAAtC,CAAtB;AAEI,QAAM;AACJQ,IAAAA,aADI;AAEJC,IAAAA,iBAFI;AAGJC,IAAAA,YAHI;AAIJC,IAAAA,IAJI;AAKJC,IAAAA;AALI,MAMFb,QAAQ,CAAC;AAAEG,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAD,CANZ;AAQA,sBACE,sBAAWK,aAAa,EAAxB;AAA4B,IAAA,KAAK,EAAE;AAAEK,MAAAA,MAAM,EAAE;AAAV,KAAnC;AAAA,4BACE;AAAA,gBACGH,YAAY,CAACI,GAAb,CAAiBC,WAAW,iBAC3B,mBAAQA,WAAW,CAACC,mBAAZ,EAAR;AAAA,kBACGD,WAAW,CAACE,OAAZ,CAAoBH,GAApB,CAAwBI,MAAM,iBAC7B,mBACMA,MAAM,CAACC,cAAP,EADN;AAEE,UAAA,KAAK,EAAE;AACLC,YAAAA,YAAY,EAAE,eADT;AAELC,YAAAA,UAAU,EAAE,WAFP;AAGLC,YAAAA,KAAK,EAAE,OAHF;AAILC,YAAAA,UAAU,EAAE;AAJP,WAFT;AAAA,oBASGL,MAAM,CAACM,MAAP,CAAc,QAAd;AATH;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YADF,eAoBE,sBAAWf,iBAAiB,EAA5B;AAAA,gBACGE,IAAI,CAACG,GAAL,CAASW,GAAG,IAAI;AACfb,QAAAA,UAAU,CAACa,GAAD,CAAV;AACA,4BACE,mBAAQA,GAAG,CAACC,WAAJ,EAAR;AAAA,oBACGD,GAAG,CAACE,KAAJ,CAAUb,GAAV,CAAcc,IAAI,IAAI;AACrB,gCACE,mBACMA,IAAI,CAACC,YAAL,EADN;AAEE,cAAA,KAAK,EAAE;AACLC,gBAAAA,OAAO,EAAE,MADJ;AAELjB,gBAAAA,MAAM,EAAE,gBAFH;AAGLQ,gBAAAA,UAAU,EAAE;AAHP,eAFT;AAAA,wBAQGO,IAAI,CAACJ,MAAL,CAAY,MAAZ;AARH;AAAA;AAAA;AAAA;AAAA,oBADF;AAYD,WAbA;AADH;AAAA;AAAA;AAAA;AAAA,gBADF;AAkBD,OApBA;AADH;AAAA;AAAA;AAAA;AAAA,YApBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA8CL;;GAjEevB,K;UAiBNF,Q;;;KAjBME,K","sourcesContent":["import React from 'react';\nimport {useTable} from 'react-table';\nimport scrollbarWidth from './scrollbarWidth'\n\nexport function Table({ columns, data }){\n\n  const defaultColumn = React.useMemo(\n    () => ({\n      width: 150,\n    }),\n    []\n  )\n\n  const scrollBarSize = React.useMemo(() => scrollbarWidth(), [])\n    \n      const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n      } = useTable({ columns, data })\n    \n      return (\n        <table {...getTableProps()} style={{ border: 'solid 1px blue' }}>\n          <thead>\n            {headerGroups.map(headerGroup => (\n              <tr {...headerGroup.getHeaderGroupProps()}>\n                {headerGroup.headers.map(column => (\n                  <th\n                    {...column.getHeaderProps()}\n                    style={{\n                      borderBottom: 'solid 3px red',\n                      background: 'aliceblue',\n                      color: 'black',\n                      fontWeight: 'bold',\n                    }}\n                  >\n                    {column.render('Header')}\n                  </th>\n                ))}\n              </tr>\n            ))}\n          </thead>\n          <tbody {...getTableBodyProps()}>\n            {rows.map(row => {\n              prepareRow(row)\n              return (\n                <tr {...row.getRowProps()}>\n                  {row.cells.map(cell => {\n                    return (\n                      <td\n                        {...cell.getCellProps()}\n                        style={{\n                          padding: '10px',\n                          border: 'solid 1px gray',\n                          background: 'papayawhip',\n                        }}\n                      >\n                        {cell.render('Cell')}\n                      </td>\n                    )\n                  })}\n                </tr>\n              )\n            })}\n          </tbody>\n        </table>\n      )\n}"]},"metadata":{},"sourceType":"module"}