{"ast":null,"code":"var _jsxFileName = \"/Users/santiago/Documents/tulipan1637/iot-sensor/app/src/features/table/Table.js\";\nimport React from 'react';\nimport { useTable, useBlockLayout } from 'react-table';\nimport scrollbarWidth from './scrollbarWidth';\nimport { FixedSizeList } from 'react-window';\nexport function Table(_ref) {\n  var _this = this;\n\n  var columns = _ref.columns,\n      data = _ref.data;\n  var defaultColumn = React.useMemo(function () {\n    return {\n      width: 150\n    };\n  }, []);\n  var scrollBarSize = React.useMemo(function () {\n    return scrollbarWidth();\n  }, []);\n\n  var _useTable = useTable({\n    columns: columns,\n    data: data,\n    defaultColumn: defaultColumn\n  }, useBlockLayout),\n      getTableProps = _useTable.getTableProps,\n      getTableBodyProps = _useTable.getTableBodyProps,\n      headerGroups = _useTable.headerGroups,\n      rows = _useTable.rows,\n      totalColumnsWidth = _useTable.totalColumnsWidth,\n      prepareRow = _useTable.prepareRow;\n\n  var RenderRow = React.useCallback(function (_ref2) {\n    var index = _ref2.index,\n        style = _ref2.style;\n    var row = rows[index];\n    prepareRow(row);\n    return /*#__PURE__*/React.createElement(\"div\", Object.assign({}, row.getRowProps({\n      style: style\n    }), {\n      className: \"tr\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }), row.cells.map(function (cell) {\n      return /*#__PURE__*/React.createElement(\"div\", Object.assign({}, cell.getCellProps(), {\n        className: \"td\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 19\n        }\n      }), cell.render('Cell'));\n    }));\n  }, [prepareRow, rows]);\n  return /*#__PURE__*/React.createElement(\"div\", Object.assign({}, getTableProps(), {\n    className: \"table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, headerGroups.map(function (headerGroup) {\n    return /*#__PURE__*/React.createElement(\"div\", Object.assign({}, headerGroup.getHeaderGroupProps(), {\n      className: \"tr\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 15\n      }\n    }), headerGroup.headers.map(function (column) {\n      return /*#__PURE__*/React.createElement(\"div\", Object.assign({}, column.getHeaderProps(), {\n        className: \"th\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 19\n        }\n      }), column.render('Header'));\n    }));\n  })), /*#__PURE__*/React.createElement(\"div\", Object.assign({}, getTableBodyProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(FixedSizeList, {\n    height: 400,\n    itemCount: rows.length,\n    itemSize: 40,\n    width: totalColumnsWidth + scrollBarSize,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, RenderRow)));\n}","map":{"version":3,"sources":["/Users/santiago/Documents/tulipan1637/iot-sensor/app/src/features/table/Table.js"],"names":["React","useTable","useBlockLayout","scrollbarWidth","FixedSizeList","Table","columns","data","defaultColumn","useMemo","width","scrollBarSize","getTableProps","getTableBodyProps","headerGroups","rows","totalColumnsWidth","prepareRow","RenderRow","useCallback","index","style","row","getRowProps","cells","map","cell","getCellProps","render","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","length"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport {useTable, useBlockLayout} from 'react-table';\nimport scrollbarWidth from './scrollbarWidth'\nimport { FixedSizeList } from 'react-window'\n\nexport function Table({ columns, data }){\n\n\n\n  const defaultColumn = React.useMemo(\n    () => ({\n      width: 150,\n    }),\n    []\n  )\n\n  const scrollBarSize = React.useMemo(() => scrollbarWidth(), [])\n    \n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    totalColumnsWidth,\n    prepareRow,\n  } = useTable({ columns, data, defaultColumn },useBlockLayout);\n\n      const RenderRow = React.useCallback(\n        ({ index, style }) => {\n          const row = rows[index]\n          prepareRow(row)\n          return (\n            <div\n              {...row.getRowProps({\n                style,\n              })}\n              className=\"tr\"\n            >\n              {row.cells.map(cell => {\n                return (\n                  <div {...cell.getCellProps()} className=\"td\">\n                    {cell.render('Cell')}\n                  </div>\n                )\n              })}\n            </div>\n          )\n        },\n        [prepareRow, rows]\n      )\n\n\n    \n      return (\n        <div {...getTableProps()} className=\"table\">\n          <div>\n            {headerGroups.map(headerGroup => (\n              <div {...headerGroup.getHeaderGroupProps()} className=\"tr\">\n                {headerGroup.headers.map(column => (\n                  <div {...column.getHeaderProps()} className=\"th\">\n                    {column.render('Header')}\n                  </div>\n                ))}\n              </div>\n            ))}\n          </div>\n    \n          <div {...getTableBodyProps()}>\n            <FixedSizeList\n              height={400}\n              itemCount={rows.length}\n              itemSize={40}\n              width={totalColumnsWidth+scrollBarSize}\n            >\n              {RenderRow}\n            </FixedSizeList>\n          </div>\n        </div>\n      )\n}\n"]},"metadata":{},"sourceType":"module"}